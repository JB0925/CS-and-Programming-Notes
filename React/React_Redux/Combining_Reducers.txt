Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2021-11-01T14:57:58-04:00

====== Combining Reducers ======
Created Monday 01 November 2021

One reducer works well if you have a small app and / or not much state to keep track of. However, if you have many items in state, you may want to make multiple reducers, and then link them to the "main" or "root" reducer using **combineReducers** from Redux.

**Example:**

const countReducer = (state, action) => {
	const { type } = action;
	switch(type) {
		case "ADD":
			return ...
		case "REMOVE":
			return ...
		default:
			return state;
	};
};

const numReducer = (state, action) => {
	const { type } = action;
	switch(type) {
		case "ADD":
			return ...
		case "REMOVE":
			return ...
		default:
			return state;
	};
};


**Pretend like the two reducers above are significantly different. Remember to export them both. â˜º **


rootReducer.js

import { combineReducers } from "redux";
import countReducer from "./countReducer";
import numReducer from "./numReducer";


**const rootReducer =** **combineReducers({ count: countReducer, nums: numReducer });**

export default rootReducer;

