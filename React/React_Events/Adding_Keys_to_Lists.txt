Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2021-07-14T21:29:05-04:00

====== Adding Keys to Lists ======
Created Wednesday 14 July 2021

When you use a list as part of **props** or **state**, you will often get a warning in the console about not having a key for each list item. 

The key helps React to keep track of when list items get changed or removed.

**KEYS **should be **unique. **If they aren't, whatever you do with the values from the list, if there are duplicates, it will affect **ALL** of the other list elements (i.e. if there is a click event, it will add extra items instead of just deleting the one you clicked on)


**NOTE:** Pay attention to below, how we pass the **key** into the **map **function for each **`NumberItem** component we create.

**Example:**

class `NumberList extends Component {
	constructor(props) {
		super(props)
		this.state = {nums: [1, 2, 3, 4, 5]}
		this.remove = this.remove.bind(this)
	}
	
	remove(num) {
		this.setState(st => {
			nums: st.nums.filter(n => n !== num)
		})
	}
	
	render() {
		let nums = this.state.nums.map(num => {
			<NumberItem **key={num}** value={num} onClick={this.remove}/>
		})
		return (
			<div>
				<h1>My Number List</h1>
				<ul>
					{nums}
			</ul>
			</div>
		)
	}
}
