Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2022-02-17T23:31:02-05:00

====== The Factory Pattern ======
Created Thursday 17 February 2022

The idea:
	Too often in a class you might see code like this:
	
	Duck duck;
	
	if (picnic) {
		duck = new MallardDuck();
	} else if (hunting) {
		duck = new DecoyDuck();
	}
	
	etc....

These decisions are being made at runtime and, if our code ever changes, we will have to change this code as well.

You may also have to write this same code, or similar code, in other parts of the application.

It also violates the **open-closed principle**, which states that software entities (classes, methods, etc.) should be **open for extension**, but **closed for modification.**

The Solution? We look at what varies, and encapsulate it.

