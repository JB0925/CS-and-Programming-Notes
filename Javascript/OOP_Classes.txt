Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2021-06-07T20:39:50-04:00

====== OOP Classes ======
Created Monday 07 June 2021

Classes in `JavaScript are very similar to what they are in Python. 
	Instead of **self**, we use **this**.
	
	There is a constructor function, but Python's:
		class MyClass:
			def `__init__(self, val1, val2):
				self.val1 = val1
			self.val2 = val2
	
	Looks like this in JS:
		**class `MyClass {**
			**constructor(a, b, c) {**
				**this.a = a;**
				**this.b = b;**
				**this.c = c;**
			**}**
		**}**
	
	So the **this** keyword isn't passed into every method declaration, but it still can be used anywhere within the class.
	

**Adding Methods in JS Classes:**
	**class `MyClass {**
		**constructor(a, b, c) {**
			**this.a = a;**
			**this.b = b;**
			**this.c = c;**
		**};**
	**}**
	
	**add() {**
		**return this.a + this.b + this.c;**
	**}**
	
	**subtract() {**
		**let allNums = [this.a, this.b, this.c].sort((a, b) => b - a);**
		**return allNums[0] - allNums[1] - allNums[2];**
	**}**
	
	So here, we added an **add** and a **subtract** method to our class. Notice how we used **this.a** instead of just **a** when referencing the a variable. This allows us to create new instances of the `**MyClass** class.
	
	**NOTE: **Notice the absence of arrow functions from all method declarations. If you use arrow functions in class or object method declarations, the **this **keyword refers to the **window** object instead of the **instance** of the class.
	
